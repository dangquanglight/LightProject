<?php	function check_formula_expression($event = null){		$event = new stdClass();		$event->device_ids = '3^`^4';		$event->operators = '>=^`^<=';		$event->values = '1500^`^4200';		$event->combines = 'AND';				$device_ids = explode(SEPARATER_FORMULAR_VALUE, $data['data']->device_ids);		$operators = explode(SEPARATER_FORMULAR_VALUE, $data['data']->operators);		$values = explode(SEPARATER_FORMULAR_VALUE, $data['data']->values);		$combines = explode(SEPARATER_FORMULAR_VALUE, $data['data']->combines);		$length = count($device_ids);				$CI = &get_instance();		$CI->load->model('measurement');		$device_values = array();		/*		$result = true;		for($i = 0; $i < $length; $i++){			//$current_value = get_latest_value($device_values, $device_ids[$i]);			if ($i == 0){				//CHECKING IN THE FIRST TIME				$result = check_formular_value($current_value, $operators[$i], $values[$i]);			}			else{				if ($result && $combine[$i - 1] == 'AND'){					//CONTINUE CHECKING					$result = check_formular_value($current_value, $operators[$i], $values[$i]);				}				else if ($result && $combine[$i - 1] == 'OR'){					//SUCCESS CASE					break;				}				else if (!$result && $combine[$i - 1] == 'AND'){					//FALSE CASE					break;				}				else if (!$result && $combine[$i - 1] == 'OR'){					//CONTINUE CHECKING					$result = check_formular_value($current_value, $operators[$i], $values[$i]);				}			}		}		*/		return $result;	}		function check_formular_value($current_value, $operator, $value){		$result = false;		if ($operator == '>'){			$result = $current_value > $value;		}		else if ($operator == '>='){			$result = $current_value >= $value;		}		else if ($operator == '<'){			$result = $current_value < $value;		}		else if ($operator == '<='){			$result = $current_value <= $value;		}		else if ($operator == '='){			$result = $current_value == $value;		}		else if ($operator == '!='){			$result = $current_value != $value;		}		return $result;	}		function get_latest_value(&$device_values, $device_id){		$value = null;		foreach($latest_value as $item){			if ($item[0] == $device_id){				$value = $item[1];				break;			}		}		if ($value === null){			$CI = &get_instance();			//GET LATEST VALUE			$value = $CI->measurement->get_lastest_data($device_id);			$device_values[] = array($device_id, $value);		}				return $value;	}		$result = check_formula_expression();	echo $result;?>