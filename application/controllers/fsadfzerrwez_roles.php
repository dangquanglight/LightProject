<?php	$file = getcwd() . "/" . APPPATH . "controllers/MY_controller.php";			include $file;	class Fsadfzerrwez_roles extends Fsadfzerrwez_home{		function Fsadfzerrwez_roles(){					parent::__construct();				$this->load->model("role");			$this->load->model("module");			$this->load->model("role_4_modules");		}				/***********************************************************************/		/**************************** START ROLES *******************************/				/***********************************************************************/				function roles(){			$this->check_login();			$this->check_role(MODULE_ROLES, MODULE_TYPE_VIEW);			$data = $this->get_roles();			$this->load_page('roles', $this->lang->line('roles'), $data);		}				function ajax_roles(){			$this->check_login_ajax();			$this->check_role_ajax(MODULE_ROLES, MODULE_TYPE_VIEW);			$data = $this->get_roles();			$model['data'] = $data;			$model['controller_name'] = $this->controller_name;			$this->load->view($this->home_directory . "roles-table", $model);		}				private function get_roles(){			$data = $this->get_page_config();				$sort_by = $this->input->get('sort_by');			$ascending = $this->input->get('ascending');					$company_id = get_company_id();			$query = $this->role->get_roles($data['keywords'], $company_id, $data['page'], $data['page_size'], $sort_by, $ascending, $num_rows);			$this->set_paging_data($data, $query, $num_rows);									return $data;		}				function add_role($id = null){										$this->check_login();			$this->check_role(MODULE_ROLES, MODULE_TYPE_VIEW);			$result = null;			$role = null;				$err_msg = '';			$role_modules = array();			$data = array();
			$data['back-url'] = get_back_url(base_url("roles" . get_url_navigate()));			if (is_post()){						//var_dump($this->role_4_modules->get_post_data());				//die();				$result = false;				$role = $this->role->get_post_data();				$role_modules = $this->role_4_modules->get_post_data();				$this->form_validation->set_rules('role_name', 'role_name', 'trim|required');				$company_id = get_company_id();				if ($this->form_validation->run() == TRUE){										//UPDATE CASE						if ($id){						$this->check_role(MODULE_ROLES, MODULE_TYPE_UPDATE);						$old_role = $this->role->get_by_name($role->role_name, $company_id);						if ($old_role && $old_role->id != $id){							$err_msg = $this->lang->line('duplicate-role');						}						else{							$result = $this->role->update($role, $id);							if ($result){								//UPDATE ROLES															$module_id = $this->role_4_modules->insert_or_update_arr($role_modules, $id, $company_id, get_user_id());								$err_msg = get_saved_message('role', $role->role_name);								if ($this->input->post('save_and_continue') == false){										$this->set_flashdata($err_msg);									redirect($data['back-url']);								}							}								else{								$err_msg = get_saved_fail_message('role', $role->role_name);							}						}					}					else{						$this->check_role(MODULE_ROLES, MODULE_TYPE_ADD);						$old_role = $this->role->get_by_name($role->role_name, $company_id);												if ($old_role){							$err_msg = $this->lang->line('duplicate-role');						}						else{							$result = $this->role->insert($role, $company_id, get_user_id());													if ($result){																			//DOING HERE								$err_msg = get_saved_message('role', $role->role_name);								if ($this->input->post('save_and_continue') == true){									//clear old data									$role->clear_data();								}								else{									$this->set_flashdata($err_msg);									redirect($data['back-url']);								}							}							else{								$err_msg = get_saved_fail_message('role', $role->role_name);							}						}											}				}				else{					$err_msg = $this->lang->line('required-role-name');				}			}			else{								if ($id){										$role = $this->role->get_id($id);										if ($role){						$role_modules = $this->role_4_modules->get_arr_by_role($role->id);					}				}				else{										$role = new role();									}			}							$data['modules'] = $this->module->get_all_modules(false);			$data['role_modules'] = $role_modules;						$data['err_msg'] = $err_msg;			$data['result'] = $result;									$data['data'] = $role;			$data['id'] = $id;						$data['page'] = $this->input->get('page');			$data['page_size'] = $this->input->get('page_size');			$data['keywords'] = $this->input->get('keywords');			$title_page = $this->lang->line('role');			if (!$role){				$title_page = get_not_found_short();			}			$this->load_page('add-role', $title_page, $data);		}				function active_roles(){						$this->check_login_ajax();			$this->check_role_ajax(MODULE_ROLES, MODULE_TYPE_UPDATE);			$active = $this->input->post('active');						$ids = $this->get_array_ids();									$this->role->active_in($active, $ids, get_company_id());		}				function delete_roles(){			$this->check_login_ajax();			$this->check_role_ajax(MODULE_ROLES, MODULE_TYPE_DELETE);			$ids = $this->get_array_ids();			$this->role->delete_in($ids, get_company_id());		}		/***********************************************************************/		/**************************** END OF ROLES *******************************/				/***********************************************************************/			}?>