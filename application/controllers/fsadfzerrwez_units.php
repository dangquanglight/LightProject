<?php	$file = getcwd() . "/" . APPPATH . "controllers/MY_controller.php";			include $file;	class Fsadfzerrwez_units extends Fsadfzerrwez_home{		function Fsadfzerrwez_units(){					parent::__construct();				$this->load->model("unit");					}				/***********************************************************************/		/**************************** START unitS *******************************/				/***********************************************************************/				function units(){			$this->check_login();						$this->check_role(MODULE_UNITS, MODULE_TYPE_VIEW);			$data = $this->get_units();			$this->load_page('units', $this->lang->line('units'), $data);		}				function ajax_units(){						$this->check_login_ajax();			$this->check_role_ajax(MODULE_UNITS, MODULE_TYPE_VIEW);			$data = $this->get_units();			$model['data'] = $data;			$model['controller_name'] = $this->controller_name;			$this->load->view($this->home_directory . "units-table", $model);		}				private function get_units(){			$data = $this->get_page_config();				$sort_by = $this->input->get('sort_by');			$ascending = $this->input->get('ascending');						$query = $this->unit->get_units($data['keywords'], $data['page'], $data['page_size'], $sort_by, $ascending, $num_rows, get_language());			$this->set_paging_data($data, $query, $num_rows);									return $data;		}				function add_unit($id = null){										$this->check_login();			$this->check_role(MODULE_UNITS, MODULE_TYPE_VIEW);			$result = null;			$unit = null;				$err_msg = '';				$data = array();
			$data['back-url'] = get_back_url(base_url("units"), MODULE_UNITS);			if (is_post()){									$result = false;				$unit = $this->unit->get_post_data();								$this->form_validation->set_rules('unit_name', $this->lang->line('required-unit-name'), 'trim|required');				if ($this->form_validation->run() == TRUE){										//UPDATE CASE						if ($id){						$this->check_role(MODULE_UNITS, MODULE_TYPE_UPDATE);																		//get unit by name						$old_data = $this->unit->get_by_name($unit->unit_name);						if (!$old_data || $old_data->id == $id){							$result = $this->unit->update($unit, $id);							if ($result){								$err_msg = get_saved_message('unit', $unit->unit_name);								if ($this->input->post('save_and_continue') == false){																	$this->set_flashdata($err_msg);									redirect($data['back-url']);								}							}								else{								$err_msg = get_saved_fail_message('unit', $unit->unit_name);							}						}						else{							$err_msg = $this->lang->line('duplicate-unit');						}											}					else{						$this->check_role(MODULE_UNITS, MODULE_TYPE_ADD);							//get unit by name						$old_data = $this->unit->get_by_name($unit->unit_name);						if (!$old_data){							$result = $this->unit->insert($unit, get_user_id());													if ($result){									$err_msg = get_saved_message('unit', $unit->unit_name);								if ($this->input->post('save_and_continue') == true){									//clear old data									$unit->clear_data();								}								else{																	$this->set_flashdata($err_msg);									redirect($data['back-url']);								}							}							else{								$err_msg = get_saved_fail_message('unit', $unit->unit_name);							}						}						else{							$err_msg = $this->lang->line('duplicate-unit');						}					}				}				else{					$err_msg = $this->lang->line('required-unit');				}			}			else{								if ($id){										$unit = $this->unit->get_id($id);									}				else{										$unit = new unit();				}			}			$data['err_msg'] = $err_msg;			$data['result'] = $result;									$data['data'] = $unit;			$data['id'] = $id;						$data['page'] = $this->input->get('page');			$data['page_size'] = $this->input->get('page_size');			$data['keywords'] = $this->input->get('keywords');			$title_page = $this->lang->line('unit');			if (!$unit){				$title_page = get_not_found_short();			}			$this->load_page('add-unit', $title_page, $data);		}				function active_units(){						$this->check_login_ajax();						$this->check_role_ajax(MODULE_UNITS, MODULE_TYPE_UPDATE);			$active = $this->input->post('active');						$ids = $this->get_array_ids();									$this->unit->active_in($active, $ids);		}				function delete_units(){			$this->check_login_ajax();			$this->check_role_ajax(MODULE_UNITS, MODULE_TYPE_DELETE);			$ids = $this->get_array_ids();			$this->unit->delete_in($ids);		}		/***********************************************************************/		/**************************** END OF unitS *******************************/				/***********************************************************************/			}?>