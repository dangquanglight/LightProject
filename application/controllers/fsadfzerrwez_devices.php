<?php	$file = getcwd() . "/" . APPPATH . "controllers/MY_controller.php";			include $file;	class Fsadfzerrwez_devices extends Fsadfzerrwez_home{		function Fsadfzerrwez_devices(){					parent::__construct();				$this->load->model("device");					}				/***********************************************************************/		/**************************** START DEVICE *******************************/				/***********************************************************************/				function devices(){						$this->check_login();			$this->check_role(MODULE_DEVICES, MODULE_TYPE_VIEW);			$data = $this->get_devices();						$this->load_page('devices', $this->lang->line('devices'), $data);		}				function ajax_devices(){						$this->check_login_ajax();			$this->check_role_ajax(MODULE_DEVICES, MODULE_TYPE_VIEW);			$data = $this->get_devices();			$model['data'] = $data;			$model['controller_name'] = $this->controller_name;			$this->load->view($this->home_directory . "devices-table", $model);		}				private function get_devices(){												$data = $this->get_page_config();				$sort_by = $this->input->get('sort_by');			$ascending = $this->input->get('ascending');						$site_id = $this->input->get('site_id');			$zone_id = $this->input->get('zone_id');			$company_id = get_company_id();			$query = $this->device->get_devices($company_id, $site_id, $zone_id, $data['keywords'], $data['page'], $data['page_size'], $sort_by, $ascending, $num_rows);			$this->set_paging_data($data, $query, $num_rows);									return $data;		}				function add_device($id = null){										$this->check_login();			$this->check_role(MODULE_DEVICES, MODULE_TYPE_VIEW);			$result = null;			$device = null;				$err_msg = '';			$company_id = get_company_id();			$data = array();			$data['back-url'] = get_back_url(base_url("devices"), MODULE_DEVICES);			if (is_post()){									$result = false;				$device = $this->device->get_post_data();								$this->form_validation->set_rules('device_name', 'device_name', 'trim|required');												if ($this->form_validation->run() == TRUE){					//UPDATE CASE						if ($id){						$this->check_role(MODULE_DEVICES, MODULE_TYPE_UPDATE);						$old_device = $this->device->get_by_device_name($device->device_name, $company_id );						if (!$old_device || $old_device->id == $id){							$result = $this->device->update($device, $id, $company_id );							if ($result){								$err_msg = get_saved_message('device', $device->device_name);								if ($this->input->post('save_and_continue') == false){																	$this->set_flashdata($err_msg);																		redirect($data['back-url']);								}								else{									add_form_error('', $err_msg);									add_form_error('result', true);								}							}								else{								add_form_error('', get_saved_fail_message('device', $device->device_name));							}						}						else{							add_form_error('', $this->lang->line('duplicate-device'));						}											}					else{						$this->check_role(MODULE_DEVICES, MODULE_TYPE_ADD);						$old_device = $this->device->get_by_device_name($device->device_name, $company_id);												if ($old_device){							add_form_error('', $this->lang->line('duplicate-device'));						}						else{														$result = $this->device->insert($device, $company_id, get_user_id());													if ($result){																$err_msg = get_saved_message('device', $device->device_name);								if ($this->input->post('save_and_continue') == true){									add_form_error('', $err_msg);									add_form_error('result', true);									//clear old data									$device->clear_data();								}								else{																		$this->set_flashdata($err_msg);									redirect($data['back-url']);								}							}							else{								add_form_error('', get_saved_fail_message('device', $device->device_name));							}						}					}				}				else{					add_form_error('device_name', $this->lang->line('required-device-device_name'));				}			}			else{								if ($id){										$device = $this->device->get_id($id, $company_id);					//echo $this->db->last_query();				}				else{										$device = new device();				}			}								$this->load->model('site');			$this->load->model('zone');			$this->load->model('unit');			$this->load->model('type');			$this->load->model('sub_type');			$data['sites'] = $this->site->get_all_sites($company_id);			$data['zones'] = $this->zone->get_all_ar_zones($company_id);			$data['err_msg'] = $err_msg;			$data['result'] = $result;									$data['data'] = $device;			$data['id'] = $id;			$data['page'] = $this->input->get('page');			$data['page_size'] = $this->input->get('page_size');			$data['keywords'] = $this->input->get('keywords');				$data['types'] = $this->type->get_all_ar_types();			$data['sub_types'] = $this->sub_type->get_all_ar_sub_types();			$data['units'] = $this->unit->get_units_by_sub_type($device->sub_type_id);			//echo $this->db->last_query();			$title_page = $this->lang->line('device');			if (!$device){				$title_page = get_not_found_short();			}			$this->load_page('add-device', $title_page, $data);		}				function active_devices(){						$this->check_login_ajax();			$this->check_role_ajax(MODULE_DEVICES, MODULE_TYPE_UPDATE);			$this->load->model("device");			$active = $this->input->post('active');						$ids = $this->get_array_ids();									$this->device->active_in($active, $ids, get_company_id());		}				function delete_devices(){			$this->check_login_ajax();						$this->check_role_ajax(MODULE_DEVICES, MODULE_TYPE_DELETE);			$ids = $this->get_array_ids();			$this->device->delete_in($ids, get_company_id());		}				function ajax_devices_in_zone($zone_id){			$this->check_login_ajax();						$this->check_role_ajax(MODULE_DEVICES, MODULE_TYPE_DELETE);			$query = $this->device->get_by_zone($zone_id, get_company_id());			$data = array();			foreach($query->result() as $row){				$item = new stdClass();				$item->device_name = $row->device_name;				$item->id = $row->id;				$item->zone_name = $row->zone_name;				$item->site_name = $row->site_name;				$data[] = $item;			}			echo json_encode($data);		}				function ajax_devices_by_type_in_zone($type_id, $zone_id){			$this->check_login_ajax();						$query = $this->device->get_all_devices_by_type_id_and_zone($type_id, $zone_id, get_company_id());			$data = array();			foreach($query->result() as $row){								$item = new stdClass();				$item->device_name = $row->device_name;				$item->id = $row->id;				$item->zone_name = $row->zone_name;				$item->site_name = $row->site_name;				$data[] = $item;							}			echo json_encode($data);		}				/***********************************************************************/		/**************************** END OF DEVICES *******************************/				/***********************************************************************/			}?>